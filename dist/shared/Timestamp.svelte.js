import './Timestamp.svelte.css.proxy.js';
/* src/shared/Timestamp.svelte generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	binding_callbacks,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal
} from "../../_snowpack/pkg/svelte/internal.js";

import { onMount } from "../../_snowpack/pkg/svelte.js";

function create_fragment(ctx) {
	let p;
	let span0;
	let span1;

	return {
		c() {
			p = element("p");
			span0 = element("span");
			span0.textContent = "ðŸ•’";
			span1 = element("span");
			attr(span0, "class", "svelte-1tjbizz");
			attr(span1, "class", "svelte-1tjbizz");
			attr(p, "class", "Timestamp");
		},
		m(target, anchor) {
			insert(target, p, anchor);
			append(p, span0);
			append(p, span1);
			/*span1_binding*/ ctx[2](span1);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(p);
			/*span1_binding*/ ctx[2](null);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { time } = $$props;
	let stamp;

	onMount(() => {
		if (time) {
			let now = new Date();
			let diff = now - time;
			let days = Math.floor(diff / (1000 * 60 * 60 * 24));
			let hours = Math.floor(diff / (1000 * 60 * 60));
			let minutes = Math.floor(diff / (1000 * 60));

			if (days > 28) {
				$$invalidate(0, stamp.innerText = time.toDateString(), stamp);
			} else if (days > 0 && days < 28) {
				$$invalidate(0, stamp.innerText = `${days} ${days == 1 ? "day" : "days"} ago`, stamp);
			} else if (days < 1) {
				$$invalidate(0, stamp.innerText = `${hours} ${hours == 1 ? "hour" : "hours"} ago`, stamp);
			} else if (hours < 1) {
				$$invalidate(0, stamp.innerText = `${minutes} ${minutes == 1 ? "minute" : "minutes"} ago`, stamp);
			} else {
				$$invalidate(0, stamp.innerText = "Just now", stamp);
			}
		} else {
			$$invalidate(0, stamp.innerText = "Long ago", stamp);
		}
	});

	function span1_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			stamp = $$value;
			$$invalidate(0, stamp);
		});
	}

	$$self.$$set = $$props => {
		if ("time" in $$props) $$invalidate(1, time = $$props.time);
	};

	return [stamp, time, span1_binding];
}

class Timestamp extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { time: 1 });
	}
}

export default Timestamp;