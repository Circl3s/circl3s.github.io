import './404.svelte.css.proxy.js';
/* src/404/404.svelte generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from "../../_snowpack/pkg/svelte/internal.js";

import Navbar from "../shared/Navbar.svelte.js";
import WebGL from "../shared/WebGL.svelte.js";
import Card from "../shared/Card.svelte.js";
import blobs from "../shaders/blobs.js";

function create_title_slot(ctx) {
	let h2;

	return {
		c() {
			h2 = element("h2");
			h2.textContent = "404: Not Found";
			attr(h2, "slot", "title");
		},
		m(target, anchor) {
			insert(target, h2, anchor);
		},
		d(detaching) {
			if (detaching) detach(h2);
		}
	};
}

// (58:12) 
function create_content_slot(ctx) {
	let div;

	return {
		c() {
			div = element("div");

			div.innerHTML = `You can <a href="/" class="svelte-u2ftkw">go to the homepage</a> or play some Breakout while you&#39;re here. :)
                <iframe title="Circl3s&#39; Super Breakout" src="/dist/404/generated/breakout.html" frameborder="0" class="svelte-u2ftkw"></iframe>`;

			attr(div, "slot", "content");
		},
		m(target, anchor) {
			insert(target, div, anchor);
		},
		d(detaching) {
			if (detaching) detach(div);
		}
	};
}

// (65:8) {#if window.WebGLRenderingContext}
function create_if_block(ctx) {
	let webgl;
	let current;
	webgl = new WebGL({ props: { shader_import: blobs } });

	return {
		c() {
			create_component(webgl.$$.fragment);
		},
		m(target, anchor) {
			mount_component(webgl, target, anchor);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(webgl.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(webgl.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(webgl, detaching);
		}
	};
}

function create_fragment(ctx) {
	let div2;
	let navbar;
	let t0;
	let div0;
	let card;
	let t1;
	let div1;
	let current;
	navbar = new Navbar({ props: { title_link: "/" } });

	card = new Card({
			props: {
				$$slots: {
					content: [create_content_slot],
					title: [create_title_slot]
				},
				$$scope: { ctx }
			}
		});

	let if_block = window.WebGLRenderingContext && create_if_block(ctx);

	return {
		c() {
			div2 = element("div");
			create_component(navbar.$$.fragment);
			t0 = space();
			div0 = element("div");
			create_component(card.$$.fragment);
			t1 = space();
			div1 = element("div");
			if (if_block) if_block.c();
			attr(div0, "class", "content svelte-u2ftkw");
			attr(div1, "class", "bg svelte-u2ftkw");
			attr(div2, "class", "NotFound svelte-u2ftkw");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			mount_component(navbar, div2, null);
			append(div2, t0);
			append(div2, div0);
			mount_component(card, div0, null);
			append(div2, t1);
			append(div2, div1);
			if (if_block) if_block.m(div1, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const card_changes = {};

			if (dirty & /*$$scope*/ 1) {
				card_changes.$$scope = { dirty, ctx };
			}

			card.$set(card_changes);
			if (window.WebGLRenderingContext) if_block.p(ctx, dirty);
		},
		i(local) {
			if (current) return;
			transition_in(navbar.$$.fragment, local);
			transition_in(card.$$.fragment, local);
			transition_in(if_block);
			current = true;
		},
		o(local) {
			transition_out(navbar.$$.fragment, local);
			transition_out(card.$$.fragment, local);
			transition_out(if_block);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div2);
			destroy_component(navbar);
			destroy_component(card);
			if (if_block) if_block.d();
		}
	};
}

class _404 extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default _404;