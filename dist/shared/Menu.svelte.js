import './Menu.svelte.css.proxy.js';
/* src/shared/Menu.svelte generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	create_slot,
	detach,
	element,
	init,
	insert,
	listen,
	run_all,
	safe_not_equal,
	set_style,
	space,
	transition_in,
	transition_out,
	update_slot
} from "../../_snowpack/pkg/svelte/internal.js";

function create_fragment(ctx) {
	let div1;
	let button;
	let t1;
	let div0;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*#slots*/ ctx[4].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[3], null);

	return {
		c() {
			div1 = element("div");
			button = element("button");
			button.innerHTML = `<span class="material-icons-round">menu</span>`;
			t1 = space();
			div0 = element("div");
			if (default_slot) default_slot.c();
			attr(button, "class", "icon svelte-126dhc5");
			attr(div0, "class", "content svelte-126dhc5");
			set_style(div0, "visibility", /*open*/ ctx[0] ? "visible" : "hidden");
			attr(div1, "class", "Menu svelte-126dhc5");
		},
		m(target, anchor) {
			insert(target, div1, anchor);
			append(div1, button);
			append(div1, t1);
			append(div1, div0);

			if (default_slot) {
				default_slot.m(div0, null);
			}

			current = true;

			if (!mounted) {
				dispose = [
					listen(button, "click", /*toggleMenu*/ ctx[1]),
					listen(div0, "click", /*closeMenu*/ ctx[2])
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 8)) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[3], !current ? -1 : dirty, null, null);
				}
			}

			if (!current || dirty & /*open*/ 1) {
				set_style(div0, "visibility", /*open*/ ctx[0] ? "visible" : "hidden");
			}
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div1);
			if (default_slot) default_slot.d(detaching);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	let { open = false } = $$props;

	function toggleMenu() {
		$$invalidate(0, open = !open);
	}

	function closeMenu() {
		$$invalidate(0, open = false);
	}

	$$self.$$set = $$props => {
		if ("open" in $$props) $$invalidate(0, open = $$props.open);
		if ("$$scope" in $$props) $$invalidate(3, $$scope = $$props.$$scope);
	};

	return [open, toggleMenu, closeMenu, $$scope, slots];
}

class Menu extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { open: 0 });
	}
}

export default Menu;